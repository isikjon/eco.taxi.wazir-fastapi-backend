"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã photo_verifications –∏ –ø–æ–ª—è photo_verification_status –≤ drivers
"""

import sqlite3
import os
from datetime import datetime

def run_migration():
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = "taxi_admin.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ photo_verification_status –≤ —Ç–∞–±–ª–∏—Ü—É drivers
        try:
            cursor.execute("""
                ALTER TABLE drivers 
                ADD COLUMN photo_verification_status VARCHAR DEFAULT 'not_started'
            """)
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ photo_verification_status –≤ —Ç–∞–±–ª–∏—Ü—É drivers")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e).lower():
                print("‚ÑπÔ∏è –ü–æ–ª–µ photo_verification_status —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ drivers")
            else:
                raise e
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É photo_verifications
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS photo_verifications (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                driver_id INTEGER NOT NULL,
                taxipark_id INTEGER NOT NULL,
                status VARCHAR DEFAULT 'pending' NOT NULL,
                photos JSON,
                rejection_reason TEXT,
                processed_by VARCHAR,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME,
                processed_at DATETIME,
                FOREIGN KEY (driver_id) REFERENCES drivers (id),
                FOREIGN KEY (taxipark_id) REFERENCES taxiparks (id)
            )
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ photo_verifications")
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π
        cursor.execute("""
            UPDATE drivers 
            SET photo_verification_status = CASE 
                WHEN is_active = 1 THEN 'approved'
                WHEN is_active = 0 THEN 'rejected'
                ELSE 'not_started'
            END
            WHERE photo_verification_status = 'not_started'
        """)
        updated_drivers = cursor.rowcount
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å —Ñ–æ—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è {updated_drivers} –≤–æ–¥–∏—Ç–µ–ª–µ–π")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        conn.rollback()
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    success = run_migration()
    if success:
        print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    else:
        print("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
