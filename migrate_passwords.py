#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π —Å bcrypt –Ω–∞ pbkdf2_sha256
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.session import SessionLocal
from app.models.administrator import Administrator
from app.core.security import get_password_hash

def migrate_passwords():
    """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –Ω–∞ –Ω–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
    db = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        administrators = db.query(Administrator).all()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(administrators)} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏...")
        
        for admin in administrators:
            if admin.hashed_password and not admin.hashed_password.startswith('$pbkdf2-sha256$'):
                # –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –µ—â–µ –Ω–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ö–µ—à
                # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –∑–Ω–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
                # –ù–æ –¥–ª—è –¥–µ–º–æ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ö–µ—à —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
                new_password = "admin123"  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö
                admin.hashed_password = get_password_hash(new_password)
                print(f"–û–±–Ω–æ–≤–ª–µ–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin.login}")
        
        db.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üîë –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: admin123")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    migrate_passwords()
